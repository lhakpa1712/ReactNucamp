[{"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/index.js":"1","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/App.js":"2","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js":"3","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js":"4","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js":"5","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js":"6","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js":"7","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js":"8","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js":"9","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js":"10","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js":"11","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js":"12","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js":"13","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js":"14","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js":"15","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js":"16","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js":"17","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js":"18","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js":"19","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js":"20","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js":"21","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js":"22","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js":"23","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js":"24","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js":"25"},{"size":697,"mtime":1621698731291,"results":"26","hashOfConfig":"27"},{"size":563,"mtime":1622229642772,"results":"28","hashOfConfig":"27"},{"size":362,"mtime":1620950339883,"results":"29","hashOfConfig":"27"},{"size":2149,"mtime":1622841333142,"results":"30","hashOfConfig":"27"},{"size":1242,"mtime":1621625206935,"results":"31","hashOfConfig":"27"},{"size":8034,"mtime":1623000017938,"results":"32","hashOfConfig":"27"},{"size":3620,"mtime":1623002774497,"results":"33","hashOfConfig":"27"},{"size":1915,"mtime":1621604441041,"results":"34","hashOfConfig":"27"},{"size":5098,"mtime":1622180697485,"results":"35","hashOfConfig":"27"},{"size":1387,"mtime":1622842524340,"results":"36","hashOfConfig":"27"},{"size":11102,"mtime":1623000162835,"results":"37","hashOfConfig":"27"},{"size":4243,"mtime":1621625341881,"results":"38","hashOfConfig":"27"},{"size":1054,"mtime":1621625358577,"results":"39","hashOfConfig":"27"},{"size":303,"mtime":1621625370386,"results":"40","hashOfConfig":"27"},{"size":4050,"mtime":1621699676564,"results":"41","hashOfConfig":"27"},{"size":779,"mtime":1622679165636,"results":"42","hashOfConfig":"27"},{"size":182,"mtime":1622488769241,"results":"43","hashOfConfig":"27"},{"size":645,"mtime":1622654865103,"results":"44","hashOfConfig":"27"},{"size":570,"mtime":1622998634978,"results":"45","hashOfConfig":"27"},{"size":696,"mtime":1622785244356,"results":"46","hashOfConfig":"27"},{"size":438,"mtime":1622784194274,"results":"47","hashOfConfig":"27"},{"size":4447,"mtime":1622998588299,"results":"48","hashOfConfig":"27"},{"size":234,"mtime":1622655237648,"results":"49","hashOfConfig":"27"},{"size":166,"mtime":1622663704475,"results":"50","hashOfConfig":"27"},{"size":48,"mtime":1622840705532,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"q5w8tp",{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"63"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/index.js",[],["106","107"],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/App.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/reportWebVitals.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/components/DirectoryComponent.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/shared/campsites.js",[],["108","109"],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/components/CampsiteInfoComponent.js",["110","111","112"],"import React,{Component} from 'react';\nimport { Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Card, CardImg, CardTitle,CardBody,CardText,Button,Modal,\n        ModalBody,ModalHeader,Col,Row} from 'reactstrap';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\nimport {Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\n\nconst required = val => val && val.length;\nconst maxLength = len =>val => !val || (val.length<= len);\nconst minLength=len =>val=>val && (val.length>=len);\n\nclass CommentForm extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            isModalOpen:false\n        };\n        this.toggleModal=this.toggleModal.bind(this);\n    }\n    handleSubmit(values){\n        this.toggleModal();\n        this.props.postComment(this.props.campsiteId, values.rating, values.author,values.text);\n    }\n    toggleModal(){ \n        this.setState({\n            isModalOpen:!this.state.isModalOpen\n        });\n    }\n    render(){\n        \n    \n        return(\n            <React.Fragment>\n                <Button outline=\"fa-lg\" onClick={this.toggleModal} >\n                    <i className=\"fa fa-pencil\"/>\n                    Submit Comment\n                </Button>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Col className=\"col-md-3\">\n                                    Rating\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col>\n                                    <Control.select model=\".rating\" name=\"rating\"\n                                    id=\"rating\" placeholder=\"1\" className=\"form-control\"\n                                   >\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col className=\"col-md-3\">\n                                    Your Name\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col>\n                                    <Control.text model=\".author\"\n                                    id=\"author\" name=\"author\" placeholder=\"Your Name\"\n                                    className=\"form-control\"  validators={{\n                                        required,\n                                        minLength: minLength(2),\n                                        maxLength: maxLength(15)\n                                    }}/>\n                                    <Errors\n                                    className=\"text-danger\"\n                                    model=\".author\"\n                                    show=\"touched\"\n                                    component=\"div\"\n                                    messages={{\n                                        required: 'Required',\n                                        minLength: 'Must be at least 2 characters',\n                                        maxLength: 'Must be 15 characters or less'\n                                    }}/>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col className=\"col-md-3\">\n                                   Comment\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col>\n                                    <Control.textarea model=\".text\"\n                                    id=\"text\" name=\"text\" className=\"form-control\" rows=\"6\"/>\n                                </Col>\n                            </Row>\n                            <Button type=\"submit\" color=\"primary\" >Submit</Button>\n                        </LocalForm>\n                        \n                        \n                    </ModalBody>\n                </Modal>\n            </React.Fragment>\n            \n        )\n    }\n}\nfunction RenderComments({comments, postComment, campsiteId}){\n        if(comments){\n            return(\n                <div className=\"col-md-5 m-1\">\n                    <h4>Comments</h4>\n                    {comments.map((comment)  => {\n                        return(\n                            <div key={comment.id}>\n                                <p>{comment.text}\n                                {comment.author},{new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}\n                                </p>\n                            </div>\n                            );\n                        }\n                   \n                    )}\n                 <CommentForm campsiteId={campsiteId} postComment={postComment} />\n                </div>\n            );\n            } \n            return <div/>\n        }\n    \nfunction RenderCampsite({campsite}){\n        return(\n            <div className=\"col-md-5 m-1\">\n                <Card>\n                    <CardImg top src={baseUrl + campsite.image} alt={campsite.name} />\n                    <CardBody>\n                        <CardTitle>{campsite.name}</CardTitle>\n                        <CardText>{campsite.description}</CardText>\n                    </CardBody>\n                </Card>\n            </div>\n        );\n    };\nfunction CampsiteInfo(props){\n            if(props.isLoading){\n                return(\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <Loading />\n                        </div>\n                    </div>\n                )\n            }\n            if(props.errMess){\n                return(\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <h4>{props.errMess}</h4>\n                            </div>\n                        </div>\n                    </div>\n                );\n            }\n            if(props.campsite){\n                return(\n                    <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <Breadcrumb>\n                                <BreadcrumbItem><Link to=\"/directory\">Directory</Link></BreadcrumbItem>\n                                <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n                            </Breadcrumb>\n                            <h2>{props.campsite.name}</h2>\n                            <hr />\n                        </div>\n                    </div>\n                    <div className=\"row\">\n                        <RenderCampsite campsite={props.campsite} />\n                        <RenderComments \n                            comments={props.comments}\n                            postComment={props.postComment}\n                            campsiteId={props.campsite.id} />\n                    </div>\n                </div>\n                )\n            }else{ \n                return( \n                <div></div>\n            );\n        }\n    }\n\n\nexport default CampsiteInfo;","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/components/MainComponent.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/components/FooterComponent.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/components/HeaderComponent.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/components/HomeComponent.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/components/ContactComponent.js",["113","114","115","116","117","118","119"],"import React , {Component}from 'react';\nimport { Breadcrumb, BreadcrumbItem,\nButton,Label,Col,Row} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {Control,Form,Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len =>val => !val || (val.length<= len);\nconst minLength=len =>val=>val && (val.length>=len);\nconst isNumber=val=> !isNaN(+val);\nconst validEmail = val => /^[A-Za-z0-9._%+-]+@[A-Za-z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\n\nclass Contact extends Component{\n    constructor(props){\n        super(props);\n        this.state={\n            firstName:'',\n            lastName:'',\n            phoneNum:'',\n            email:'',\n            agree:false,\n            contactType:'By Phone',\n            feedback:'',\n            touched:{\n                firstName:false,\n                lastName:false,\n                phoneNum:false,\n                email:false\n            }\n        };\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values){\n        console.log(\"Current state is:\" + JSON.stringify(values));\n        alert(\"Current state is:\"+ JSON.stringify(values));\n        this.props.resetFeedbackForm();\n    }\n\n    render(){\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <Form model=\"feedbackForm\" onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>                        \n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                     <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />                               \n                                    </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 4, offset: 2}}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                                 /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\".contactType\" name=\"contactType\"\n                                            value={this.state.contactType}\n                                            className=\"form-control\"\n                                            >\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"/>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size: 10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/shared/comments.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/shared/partners.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/shared/promotions.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/components/AboutComponent.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/redux/configureStore.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/redux/partners.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/redux/campsites.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/redux/comments.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/redux/promotions.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionTypes.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/components/LoadingComponent.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/redux/forms.js",[],"/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/shared/baseUrl.js",[],{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","replacedBy":"123"},{"ruleId":"120","replacedBy":"124"},{"ruleId":"122","replacedBy":"125"},{"ruleId":"126","severity":1,"message":"127","line":52,"column":37,"nodeType":"128","endLine":54,"endColumn":37},{"ruleId":"126","severity":1,"message":"129","line":70,"column":37,"nodeType":"128","endLine":76,"endColumn":41},{"ruleId":"126","severity":1,"message":"130","line":96,"column":37,"nodeType":"128","endLine":97,"endColumn":94},{"ruleId":"126","severity":1,"message":"129","line":79,"column":37,"nodeType":"128","endLine":87,"endColumn":39},{"ruleId":"126","severity":1,"message":"129","line":104,"column":37,"nodeType":"128","endLine":113,"endColumn":39},{"ruleId":"126","severity":1,"message":"129","line":130,"column":37,"nodeType":"128","endLine":139,"endColumn":39},{"ruleId":"126","severity":1,"message":"129","line":157,"column":37,"nodeType":"128","endLine":164,"endColumn":39},{"ruleId":"126","severity":1,"message":"131","line":181,"column":45,"nodeType":"128","endLine":184,"endColumn":52},{"ruleId":"126","severity":1,"message":"127","line":190,"column":37,"nodeType":"128","endLine":193,"endColumn":46},{"ruleId":"126","severity":1,"message":"130","line":202,"column":37,"nodeType":"128","endLine":204,"endColumn":67},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],["132"],["133"],"react/jsx-pascal-case","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","no-global-assign","no-unsafe-negation"]