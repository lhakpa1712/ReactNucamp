{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\nexport const addComment = (campsiteId, rating, author, text) => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: {\n    campsiteId: campsiteId,\n    rating: rating,\n    author: author,\n    text: text\n  }\n});\nexport const fetchCampsites = () => dispatch => {\n  dispatch(campsitesLoading());\n  return fetch(baseUrl + 'campsites').then(response => response.json()).then(campsites => dispatch(addCampsites(campsites)));\n};\nexport const campsitesLoading = () => ({\n  type: ActionTypes.CAMPSITES_LOADING\n});\nexport const campsitesFailed = errMess => ({\n  type: ActionTypes.CAMPSITES_FAILED,\n  payload: errMess\n});\nexport const addCampsites = campsites => ({\n  type: ActionTypes.ADD_CAMPSITES,\n  payload: campsites\n});\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + 'comments').then(response => response.json()).then(comments => dispatch(addComments(comments)));\n};\nexport const commentsFailed = errMess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errMess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const fetchPromotions = () => dispatch => {\n  dispatch(promotionsLoading());\n  return fetch(baseUrl + 'promotions').then(response => response.json()).then(promotions => dispatch(addPromotions(promotions)));\n};\nexport const promotionsLoading = () => ({\n  type: ActionTypes.PROMOTIONS_LOADING\n});\nexport const promotionsFailed = errMess => ({\n  type: ActionTypes.PROMOTIONS_FAILED,\n  payload: errMess\n});\nexport const addPromotions = promotions => ({\n  type: ActionTypes.ADD_PROMOTIONS,\n  payload: promotions\n});","map":{"version":3,"sources":["/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","addComment","campsiteId","rating","author","text","type","ADD_COMMENT","payload","fetchCampsites","dispatch","campsitesLoading","fetch","then","response","json","campsites","addCampsites","CAMPSITES_LOADING","campsitesFailed","errMess","CAMPSITES_FAILED","ADD_CAMPSITES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","fetchPromotions","promotionsLoading","promotions","addPromotions","PROMOTIONS_LOADING","promotionsFailed","PROMOTIONS_FAILED","ADD_PROMOTIONS"],"mappings":"AAAA,OAAO,KAAKA,WAAZ,MAA6B,eAA7B;AACA,SAAQC,OAAR,QAAsB,mBAAtB;AAEA,OAAO,MAAMC,UAAU,GAAG,CAACC,UAAD,EAAaC,MAAb,EAAqBC,MAArB,EAA6BC,IAA7B,MAAuC;AAC7DC,EAAAA,IAAI,EAAEP,WAAW,CAACQ,WAD2C;AAE7DC,EAAAA,OAAO,EAAE;AACLN,IAAAA,UAAU,EAACA,UADN;AAELC,IAAAA,MAAM,EAACA,MAFF;AAGLC,IAAAA,MAAM,EAACA,MAHF;AAILC,IAAAA,IAAI,EAACA;AAJA;AAFoD,CAAvC,CAAnB;AAUP,OAAO,MAAMI,cAAc,GAAG,MAAMC,QAAQ,IAAI;AAE5CA,EAAAA,QAAQ,CAACC,gBAAgB,EAAjB,CAAR;AAEA,SAAOC,KAAK,CAACZ,OAAO,GAAG,WAAX,CAAL,CACNa,IADM,CACDC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADX,EAENF,IAFM,CAEDG,SAAS,IAAIN,QAAQ,CAACO,YAAY,CAACD,SAAD,CAAb,CAFpB,CAAP;AAGH,CAPM;AASP,OAAO,MAAML,gBAAgB,GAAG,OAAO;AACnCL,EAAAA,IAAI,EAAEP,WAAW,CAACmB;AADiB,CAAP,CAAzB;AAIP,OAAO,MAAMC,eAAe,GAAGC,OAAO,KAAK;AACvCd,EAAAA,IAAI,EAAEP,WAAW,CAACsB,gBADqB;AAEvCb,EAAAA,OAAO,EAAEY;AAF8B,CAAL,CAA/B;AAKP,OAAO,MAAMH,YAAY,GAAGD,SAAS,KAAK;AACtCV,EAAAA,IAAI,EAAEP,WAAW,CAACuB,aADoB;AAEtCd,EAAAA,OAAO,EAAEQ;AAF6B,CAAL,CAA9B;AAIP,OAAO,MAAMO,aAAa,GAAG,MAAMb,QAAQ,IAAI;AAC3C,SAAOE,KAAK,CAACZ,OAAO,GAAG,UAAX,CAAL,CACFa,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,EAEFF,IAFE,CAEGW,QAAQ,IAAId,QAAQ,CAACe,WAAW,CAACD,QAAD,CAAZ,CAFvB,CAAP;AAGH,CAJM;AAKP,OAAO,MAAME,cAAc,GAAGN,OAAO,KAAK;AACtCd,EAAAA,IAAI,EAAEP,WAAW,CAAC4B,eADoB;AAEtCnB,EAAAA,OAAO,EAAEY;AAF6B,CAAL,CAA9B;AAKP,OAAO,MAAMK,WAAW,GAAGD,QAAQ,KAAK;AACpClB,EAAAA,IAAI,EAAEP,WAAW,CAAC6B,YADkB;AAEpCpB,EAAAA,OAAO,EAAEgB;AAF2B,CAAL,CAA5B;AAKP,OAAO,MAAMK,eAAe,GAAG,MAAMnB,QAAQ,IAAI;AAC7CA,EAAAA,QAAQ,CAACoB,iBAAiB,EAAlB,CAAR;AAEA,SAAOlB,KAAK,CAACZ,OAAO,GAAG,YAAX,CAAL,CACFa,IADE,CACGC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADf,EAEFF,IAFE,CAEGkB,UAAU,IAAIrB,QAAQ,CAACsB,aAAa,CAACD,UAAD,CAAd,CAFzB,CAAP;AAGH,CANM;AAQP,OAAO,MAAMD,iBAAiB,GAAG,OAAO;AACpCxB,EAAAA,IAAI,EAAEP,WAAW,CAACkC;AADkB,CAAP,CAA1B;AAIP,OAAO,MAAMC,gBAAgB,GAAGd,OAAO,KAAK;AACxCd,EAAAA,IAAI,EAAEP,WAAW,CAACoC,iBADsB;AAExC3B,EAAAA,OAAO,EAAEY;AAF+B,CAAL,CAAhC;AAKP,OAAO,MAAMY,aAAa,GAAGD,UAAU,KAAK;AACxCzB,EAAAA,IAAI,EAAEP,WAAW,CAACqC,cADsB;AAExC5B,EAAAA,OAAO,EAAEuB;AAF+B,CAAL,CAAhC","sourcesContent":["import * as ActionTypes from './ActionTypes';\nimport {baseUrl} from '../shared/baseUrl';\n\nexport const addComment = (campsiteId, rating, author, text) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: {\n        campsiteId:campsiteId,\n        rating:rating,\n        author:author,\n        text:text\n    }\n});\n\nexport const fetchCampsites = () => dispatch => {\n\n    dispatch(campsitesLoading());\n\n    return fetch(baseUrl + 'campsites')\n    .then(response => response.json())\n    .then(campsites => dispatch(addCampsites(campsites)));\n};\n\nexport const campsitesLoading = () => ({\n    type: ActionTypes.CAMPSITES_LOADING\n});\n\nexport const campsitesFailed = errMess => ({\n    type: ActionTypes.CAMPSITES_FAILED,\n    payload: errMess\n});\n\nexport const addCampsites = campsites => ({\n    type: ActionTypes.ADD_CAMPSITES,\n    payload: campsites\n});\nexport const fetchComments = () => dispatch => {    \n    return fetch(baseUrl + 'comments')\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)));\n};\nexport const commentsFailed = errMess => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errMess\n});\n\nexport const addComments = comments => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const fetchPromotions = () => dispatch => {\n    dispatch(promotionsLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => response.json())\n        .then(promotions => dispatch(addPromotions(promotions)));\n};\n\nexport const promotionsLoading = () => ({\n    type: ActionTypes.PROMOTIONS_LOADING\n});\n\nexport const promotionsFailed = errMess => ({\n    type: ActionTypes.PROMOTIONS_FAILED,\n    payload: errMess\n});\n\nexport const addPromotions = promotions => ({\n    type: ActionTypes.ADD_PROMOTIONS,\n    payload: promotions\n});\n"]},"metadata":{},"sourceType":"module"}