{"ast":null,"code":"import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\nexport const fetchCampsites = () => dispatch => {\n  dispatch(campsitesLoading());\n  return fetch(baseUrl + 'campsites').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    const errMess = new Error(error.message);\n    throw errMess;\n  }).then(response => response.json()).then(campsites => dispatch(addCampsites(campsites))).catch(error => dispatch(campsitesFailed(error.message)));\n};\nexport const campsitesLoading = () => ({\n  type: ActionTypes.CAMPSITES_LOADING\n});\nexport const campsitesFailed = errMess => ({\n  type: ActionTypes.CAMPSITES_FAILED,\n  payload: errMess\n});\nexport const addCampsites = campsites => ({\n  type: ActionTypes.ADD_CAMPSITES,\n  payload: campsites\n});\nexport const fetchComments = () => dispatch => {\n  return fetch(baseUrl + 'comments').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    const errMess = new Error(error.message);\n    throw errMess;\n  }).then(response => response.json()).then(comments => dispatch(addComments(comments))).catch(error => dispatch(commentsFailed(error.message)));\n};\nexport const commentsFailed = errMess => ({\n  type: ActionTypes.COMMENTS_FAILED,\n  payload: errMess\n});\nexport const addComments = comments => ({\n  type: ActionTypes.ADD_COMMENTS,\n  payload: comments\n});\nexport const addComment = comment => ({\n  type: ActionTypes.ADD_COMMENT,\n  payload: comment\n});\nexport const postComment = (campsiteId, rating, author, text) => dispatch => {\n  const newComment = {\n    campsiteId: campsiteId,\n    rating: rating,\n    author: author,\n    text: text\n  };\n  newComment.date = new Date().toISOString();\n  return fetch(baseUrl + 'comments', {\n    method: \"POST\",\n    body: JSON.stringify(newComment),\n    headers: {\n      \"Content-Type\": \"application/json\"\n    }\n  }).then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    throw error;\n  }).then(response => response.json()).then(response => dispatch(addComment(response))).catch(error => {\n    console.log('post comment', error.message);\n    alert('Your comment could not be posted\\nError: ' + error.message);\n  });\n};\nexport const fetchPromotions = () => dispatch => {\n  dispatch(promotionsLoading());\n  return fetch(baseUrl + 'promotions').then(response => {\n    if (response.ok) {\n      return response;\n    } else {\n      const error = new Error(`Error ${response.status}: ${response.statusText}`);\n      error.response = response;\n      throw error;\n    }\n  }, error => {\n    const errMess = new Error(error.message);\n    throw errMess;\n  }).then(response => response.json()).then(promotions => dispatch(addPromotions(promotions))).catch(error => dispatch(promotionsFailed(error.message)));\n};\nexport const promotionsLoading = () => ({\n  type: ActionTypes.PROMOTIONS_LOADING\n});\nexport const promotionsFailed = errMess => ({\n  type: ActionTypes.PROMOTIONS_FAILED,\n  payload: errMess\n});\nexport const addPromotions = promotions => ({\n  type: ActionTypes.ADD_PROMOTIONS,\n  payload: promotions\n});","map":{"version":3,"sources":["/Users/lhakpalama/Desktop/NucampFolder/3-React/nucampsite/src/redux/ActionCreators.js"],"names":["ActionTypes","baseUrl","fetchCampsites","dispatch","campsitesLoading","fetch","then","response","ok","error","Error","status","statusText","errMess","message","json","campsites","addCampsites","catch","campsitesFailed","type","CAMPSITES_LOADING","CAMPSITES_FAILED","payload","ADD_CAMPSITES","fetchComments","comments","addComments","commentsFailed","COMMENTS_FAILED","ADD_COMMENTS","addComment","comment","ADD_COMMENT","postComment","campsiteId","rating","author","text","newComment","date","Date","toISOString","method","body","JSON","stringify","headers","console","log","alert","fetchPromotions","promotionsLoading","promotions","addPromotions","promotionsFailed","PROMOTIONS_LOADING","PROMOTIONS_FAILED","ADD_PROMOTIONS"],"mappings":"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","sourcesContent":["import * as ActionTypes from './ActionTypes';\nimport {baseUrl} from '../shared/baseUrl';\n\n\n\nexport const fetchCampsites = () => dispatch => {\n    dispatch(campsitesLoading());\n\n    return fetch(baseUrl + 'campsites')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(campsites => dispatch(addCampsites(campsites)))\n        .catch(error => dispatch(campsitesFailed(error.message)));\n};\n\nexport const campsitesLoading = () => ({\n    type: ActionTypes.CAMPSITES_LOADING\n});\n\nexport const campsitesFailed = errMess => ({\n    type: ActionTypes.CAMPSITES_FAILED,\n    payload: errMess\n});\n\nexport const addCampsites = campsites => ({\n    type: ActionTypes.ADD_CAMPSITES,\n    payload: campsites\n});\nexport const fetchComments = () => dispatch => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsFailed = errMess => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errMess\n});\n\nexport const addComments = comments => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const addComment = comment => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload:comment\n});\n\nexport const postComment = (campsiteId, rating, author, text) => dispatch => {\n    \n    const newComment = {\n        campsiteId: campsiteId,\n        rating: rating,\n        author: author,\n        text: text\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n            method: \"POST\",\n            body: JSON.stringify(newComment),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => { throw error; }\n        )\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => {\n            console.log('post comment', error.message);\n            alert('Your comment could not be posted\\nError: ' + error.message);\n        });\n};\n\n\nexport const fetchPromotions = () => dispatch => {\n    dispatch(promotionsLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    const error = new Error(`Error ${response.status}: ${response.statusText}`);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                const errMess = new Error(error.message);\n                throw errMess;\n            }\n        )\n        .then(response => response.json())\n        .then(promotions => dispatch(addPromotions(promotions)))\n        .catch(error => dispatch(promotionsFailed(error.message)));\n};\n\nexport const promotionsLoading = () => ({\n    type: ActionTypes.PROMOTIONS_LOADING\n});\n\nexport const promotionsFailed = errMess => ({\n    type: ActionTypes.PROMOTIONS_FAILED,\n    payload: errMess\n});\n\nexport const addPromotions = promotions => ({\n    type: ActionTypes.ADD_PROMOTIONS,\n    payload: promotions\n});\n"]},"metadata":{},"sourceType":"module"}